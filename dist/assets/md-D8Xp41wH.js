import{o as n,c as l,k as c,q as a,s as r,C as s,e}from"./modules/vue-D2pOHkaZ.js";import{I as _}from"./slidev/default-DWydssHI.js";import{u as i,f as p}from"./slidev/context-DgN9fkBL.js";import"./index-DsuDDjy0.js";import"./modules/shiki-DHScOeNh.js";const u="/assets/images/webpack.png",d=e("h3",null,"webpack打包的问题",-1),m=e("ul",null,[e("li",null,"webpack原理")],-1),k=e("img",{src:u,class:"border-rounded w-70% my-2"},null,-1),b=e("p",null,"当我们使用webpack启动项目时，webpack会根据我们配置文件（webpack.config.js） 中的入口文件（entry），分析出项目项目所有依赖关系，然后打包成一个文件（bundle.js），交给浏览器去加载渲染。",-1),f=e("p",null,"这样就会带来一个问题，项目越大，需要打包的东西越多，启动时间越长。",-1),h=e("ul",null,[e("li",null,"构建方式")],-1),w=e("p",null,"webpack是基于nodejs运行的，但js只能单线程运行，无法利用多核CPU的优势，当项目越来越大时，构建速度也就越来越慢了。",-1),$=e("ul",null,[e("li",null,"热更新")],-1),g=e("p",null,"webpack项目中，每次修改文件，都会对整个项目重新进行打包，这对大项目来说，是非常不友好的。 虽然webpack现在有了缓存机制，但还是无法从根本上解决这个问题。",-1),x={__name:"content-build-tool.md__slidev_8",setup(C){const{$slidev:j,$nav:v,$clicksContext:t,$clicks:P,$page:y,$renderContext:B,$frontmatter:o}=i();return t.setup(),(I,q)=>(n(),l(_,a(r(s(p)(s(o),7))),{default:c(()=>[d,m,k,b,f,h,w,$,g]),_:1},16))}},T=x;export{T as default};
